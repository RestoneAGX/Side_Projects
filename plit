[1mdiff --git a/pictionary_thing/main.c b/pictionary_thing/main.c[m
[1mindex 81d8fa1..c3e911a 100644[m
[1m--- a/pictionary_thing/main.c[m
[1m+++ b/pictionary_thing/main.c[m
[36m@@ -1,9 +1,11 @@[m
 #include<stdio.h>[m
[31m-#include<math.h>[m
[31m-#include<rand.h>[m
[32m+[m[32m#include<stdlib.h>[m
[32m+[m[32m#include<time.h>[m
[32m+[m
[32m+[m[32mint instances;[m
 [m
 int generate_num(int min, int max){[m
[31m-    srand(time(0));[m
[32m+[m[32m    srand(time(0) * instances++);[m
     return (rand() % (max - min + 1)) + min;[m
 }[m
 [m
[36m@@ -11,34 +13,42 @@[m [mvoid help() {[m
     printf("");[m
 }[m
 [m
[31m-void (*ftable[])() = {};[m
[31m-[m
[31m-int main(int argc, char** argv){[m
[31m-    if (argc < 2) return -1;[m
[31m-    // check for help or list command[m
[31m-[m
[31m-    [m
[31m-    FILE* fp = fopen(argv[1], "r");[m
[32m+[m[32mvoid generate_list(FILE* fp){[m
     fseek(fp, 0, SEEK_END);[m
     int len = ftell(fp);[m
[32m+[m[32m    rewind(fp);[m
[32m+[m[41m    [m
     char buff[len];[m
[31m-    int last_newline = 0;[m
[31m-    unsigned char newline_count = 0;[m
[31m-    unsigned char target_count = generate_num(1, len);[m
[31m-    char c;[m
[31m-[m
[31m-    for(int i = 0; !feof(fp); i++ ){[m
[31m-        c = fgetc(fp);[m
[31m-        if (c == '\n') {[m
[31m-            last_newline = i;[m
[31m-            if (generate_num == 1){[m
[31m-                // write to stdout and say the word[m
[31m-                fwrite[m
[31m-            }[m
[32m+[m[32m    int newlines[255];[m
[32m+[m[32m    int i = 0, newline_count;[m
[32m+[m[41m    [m
[32m+[m[32m    for (; !feof(fp); i++){[m
[32m+[m
[32m+[m[32m    }[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mvoid generate_word(){[m
[32m+[m[32m    char buff[100];[m
[32m+[m[32m    for(; !feof(fp); i++ ){[m
[32m+[m[32m        buff[i] = fgetc(fp);[m
[32m+[m[32m        if (buff[i] == '\n') {[m
[32m+[m[32m            if (generate_num(1, 4) == 2) break;[m
[32m+[m[32m            last_newline = i+1;[m
         }[m
     }[m
[31m-    // randomly select one[m
 [m
[32m+[m[32m    buff[i] = 0;[m
[32m+[m[32m    printf("Your Word is: %s\n", buff + last_newline);[m
[32m+[m[32m}[m
 [m
[32m+[m[32mint main(int argc, char** argv){[m
[32m+[m[32m    if (argc < 2) return -1;[m
[32m+[m[41m    [m
[32m+[m[32m    // check for help or list command[m
[32m+[m[32m    FILE* fp = fopen(argv[1], "r");[m
[32m+[m
[32m+[m[41m    [m
[32m+[m[32m    // buff[len] = 0;[m[41m [m
[32m+[m[32m    // printf("%s\n", buff);[m
     return 0;[m
 }[m
[1mdiff --git a/pictionary_thing/word_gen b/pictionary_thing/word_gen[m
[1mindex 403a89b..a08a6ad 100755[m
Binary files a/pictionary_thing/word_gen and b/pictionary_thing/word_gen differ
